---
interface Props {
  title: string;
  socialDescription?: string;
  socialImage?: string;
}

const { title, socialDescription, socialImage } = Astro.props;
---

<!doctype html>
<html lang="ko">
  <head>
    {
      socialDescription && (
        <meta name="description" content={socialDescription} />
        <meta property="og:description" content={socialDescription} />
        <meta name="twitter:description" content={socialDescription} />
      )
    }
    {
      socialImage ? (
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:image" content={socialImage} />
        <meta property="og:image" content={socialImage} />
      ) : (
        <meta name="twitter:card" content="summary" />
      )
    }
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<script is:inline>
  const theme = (() => {
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
</script> 
